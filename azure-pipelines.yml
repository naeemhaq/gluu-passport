# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

resources:
 pipelines:
   - pipeline: openidconnect
     source: naeemhaq.passport-openidconnect
     trigger:
      branches:
      - master 
   - pipeline: passportsaml
     source: naeemhaq.passport-saml
     trigger:
      branches:
      - master

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'Install Node.js'

- script: |
    npm install
  displayName: 'npm install and build'

- task: DownloadPipelineArtifact@2
  inputs:
    buildType: 'specific'
    project: '32be4b0e-237f-430d-9289-c5966a5c9829'
    definition: '3'
    buildVersionToDownload: 'latest'
    artifactName: 'passport-saml'
    itemPattern: '**/s/passport-saml-1.2.0.tgz'
    targetPath: '$(Pipeline.Workspace)/saml'
- task: DownloadPipelineArtifact@2
  inputs:
    buildType: 'specific'
    project: '32be4b0e-237f-430d-9289-c5966a5c9829'
    definition: '4'
    buildVersionToDownload: 'latest'
    artifactName: 'passport-openidconnect'
    itemPattern: '**/s/passport-openidconnect-0.0.2.tgz'
    targetPath: '$(Pipeline.Workspace)/openid'

- script: |
    pwd
    ls -al
    npm install $(Pipeline.Workspace)/saml/s/passport-saml-1.2.0.tgz
    echo '***** saml instal executed ****'
    npm install $(Pipeline.Workspace)/openid/s/passport-openidconnect-0.0.2.tgz
  displayName: 'Update packages'
  continueOnError: true

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Pipeline.Workspace)/s'
    Contents: |
      **/s/LICENSE
      **/s/package.json
      **/s/package-lock.json
      **/s/README.md
      **/s/server/*
      **/s/node_modules/*
    TargetFolder: '$(Pipeline.Workspace)/package'

- script: |
    echo 'packaging the files'
    pwd
    cd $(Pipeline.Workspace)/package
    pwd
    tar -czvf passport-version_4.0-node_modules.tar.gz node_modules
    cd $(Pipeline.Workspace)
    tar -czvf passport.tgz --exclude='package/node_modules/*' package
  displayName: 'create tarballs'
  continueOnError: true

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Pipeline.Workspace)'
    artifact: 'gluu-passport'
    publishLocation: 'pipeline'
  condition: succeededOrFailed()

- task: UniversalPackages@0
  inputs:
    command: 'publish'
    publishDirectory: '$(Pipeline.Workspace)/s'
    feedsToUsePublish: 'internal'
    vstsFeedPublish: '32be4b0e-237f-430d-9289-c5966a5c9829/032cde20-7872-4dbd-86db-d0af542b88b7'
    vstsFeedPackagePublish: 'gluu-passport'
    versionOption: 'patch'


